lock n offset = timeLoop n . ((offset |- (slow n $ run n)) <~)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("<1 [1 1 1? 0] 1 [1 0 1 0]>"*1) -- 1 [1(12,16)] 1 [1 0 1 0]

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("1 0 1 1 0 0 1 0 1 1 1 0 0 1 1 0"*1) --

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("1 0 1 1 0 0 <1 0> 0"*1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("1(3,8)"*1) -- "1 0 1 1 0 0 1 0 1 1 1 0 0 1 1 0"

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("{1(2,5)}%5"*"<[1]!3 [1 <1 0>]>")

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("{1(3,7)}%1"*"<[1!3 <1 0>]>") -- "1 0 1 1 0 0 1 0 1 1 1 0 0 1 1 0"

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<15 30>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("{1(2,5)}%5"*"<[1] [1 <1 0>]>")

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("14"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain (1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("15"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain (1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<15 30>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain (1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("21"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain (1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16 <4 3> 16 8>")+("24"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain (1)

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<32!2 8 16>")+("32"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("1(12,16)")

p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run "<16>")+("2"))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.75 # up "-6" # gain ("{1(3,5)}%6")


allRunAmounts = [
  "<16 <4 3> 16 8>", -- 0
  "<32!2 8 16>", -- 1
  "<15 30>" -- 2
  ]
allLocations = [
  "2", -- 0
  "14", -- 1
  "15", -- 2
  "21", -- 3
  "24", -- 4
  "32" -- 5
  ]
allGainBases = [
  "1", -- 0
  "1(3,8)", -- 1
  "{1(2,5)}%5", -- 2
  "1(12,16)", -- 3
  "{1(2,5)}%15" -- 4
  ]
allGainMults = [
  "1", -- 0
  "0", -- 1
  "<[1]!3 [1 <1 0>]>", -- 2
  "<[1] [1 <1 0>]>", -- 3
  "<1 [1 1 1? 0] 1 [1 0 1 0]>" -- 4
  ]
heartChant r l b m =
  do
    let runAmounts = allRunAmounts!!r
    let location = allLocations!!l
    let gainBase = allGainBases!!b
    let gainMult = allGainMults!!m
    p "heartChant" $ swingBy (1/3) 16 $ slice 240 (segment 16 ((run 32)*(run runAmounts)+(location))) $ sound "aaron*240" # cut 1 # orbit 11 # room 0.1 # up "-6" # gain (gainBase*gainMult+0.2)

heartChant 0 0 1 0
heartChant 0 0 2 0
heartChant 0 0 4 0
heartChant 2 0 2 3
heartChant 2 0 0 0
heartChant 1 5 3 0
heartChant 0 1 0 0
heartChant 0 2 0 0
heartChant 0 3 0 0
heartChant 0 4 0 0
heartChant 0 0 0 4

hush
p "heartChant" silence

d1 $ jux (rev) $ lock 8 "<1 1 2 2 3 4 3 4>" $ s "SOPHIE_percussion*4" # n (irand 20) # gain ("{1(3,7)}%<2 5 8>"*"<1>") # room 0.1 # up "-5" # speed (slow 2 (range 2 1 saw))

d2 $ slow 4 $ s "[SOPHIE_fx_kicks:8, percussion:1, percussion:10]" # room 0.7  -- # krush 2 # note

newSlop = do
  p "slop1" $ slow 4 $ degradeBy 0.6 $ s "dr_few ~ [~ dr_few] ~ dr_few dr_few ~ [~ dr_few] ~ dr_few dr_few ~ [~ dr_few] ~ ~ dr_few ~ [~ dr_few] ~ dr_few" # room 0.9 # krush 20 # nudge "-0.01" # gain 1 # nudge 0.01  # speed (("{0.375 0.75}")) # up 14 # orbit 3-- # up ( ("<9 12 16 15 10 13 8 17>"+1))
  xfade "slop2" $ slow 4 $ jux rev $ s "{808:3?}%40" # speed "2" # gain (range 0.5 1.1 (rand)) # nudge "-0.01" # room 0.07 # orbit 2-- # speed (slow 4 (range 8 6 (saw)))
  p "slop3" $ degradeBy 0.0 $ s "{808bd}%4" # gain 2 # orbit 2 # krush 20
  -- p "lovano2" $ slow 5 $ slice 18 "<9 9 9 9 9 9 9 9 9 9>*10" $ s "33:28" # gain 1 # speed "2" # room 0.5 # up 1 # nudge "0.02"
  p "lovano1" $ slow 5 $ jux rev $ slice 16 "<0 1 1 0 1 0 0 1 1 1>*40" $ s "33:28*40" # room 0.5 # gain 1.2 # speed "8" # up 0 # cut 1

newSlop

p "lovano2" silence

hush


d3 $ degradeBy 0.3 $ s "[808bd:1(<3 <2 1> 3 5>,8),~ cp ~ cp]" # note "f7 c7 a6 f6" # room 0.4 # krush 6 -- # up "-6"
d9 $ s "[808bd:1(<3 <2 1> 3 5>,8),~ cp ~ cp]" # room 0.4 # krush 6

d2 $ degradeBy 0.1 $ jux (rev) $ off (0.25) (# s "sine:0") $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) (slow 2 "d(3,8) a [c(3,8,2) e*2] e(3,8)")))) # s "arpy:2" # speed "0.5" # room 0.5 -- # cutoff (slow 8 tri * 10000 + 50) # resonance 0.2

d3 $ degradeBy 0.3 $ sometimes (# speed "2") $ chunk 4 (density 2) $ jux rev $ iter 4 $ n ((run 8)+"<0 1 1 1>") # sound "sid" # room 0.95 # up "-3" # krush 5

d4 $ fast 2 $ someCycles (# n 1 ) $ struct "t*2 t*2? t*2 <t*6 [t*2]!3>" $ s "808" # room 0.7 # gain (range 0.9 1.2 rand) # up "4" # speed 2

setcps(0.6)

d5 $ degradeBy 0.4 $ jux (rev) $ off (0.25) (# s "glitch:3") $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) (slow 2 "d(3,8) a [c(3,8,2) e*2] e(3,8)")))) # s "casio:1" # speed "0.5" # room 0.5 # gain 0.8 # up "-7" -- # speed 0.9

d2 $ degradeBy 0.0 $ jux rev $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) "d*2 [g*3? a*4?] [c3 e*2] e" ))) # sound "arpy:2" # room 0.5 # gain 1.1 # speed 0.5 # krush 1

d2 $ degradeBy 0.2 $ jux rev $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) "d*2 [g*3? a] [c3 e*2?] e" ))) # sound "arpy:2" # room 0.5 # gain 1.1 # speed 0.5 # krush 1

d2 $ degradeBy 0.0 $ slow 2 $ struct "t(<3 5>,16)" $ jux rev $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) "d [g3*2 a] [c3 e] e" ))) # sound "arpy:2" # room 0.5 # gain 1.1 # speed 0.5 # krush 1

d3 $ degradeBy 0.2 $ sometimes (# speed "2") $ chunk 4 (density 2) $ jux rev $ iter 4 $ n ((run 8)+"<0 1 1 1>") # sound "sid" # room 0.95 # up "4" # krush 5

d2 $ degradeBy 0.35 $ s "[808bd:1(<3 <2 1> 3 5>,8),~ cp ~ cp]" # note "f7 c7 a6 f6" # room 0.4 # krush 6

d2 $ whenmod 4 2 (# up "-3") $ s "[808bd:1(<3 0 3 0>,8),~ cp ~ cp]" # room 0.2 # krush 6 # up "-8"

d3 $ degradeBy 0.0 $ slow 2 $ struct "t(<3 5>,16)" $ jux rev $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) "d [g3*2 a] [c3 e] e" ))) # sound "arpy:2" # room 0.5 # gain 1.1 # speed 0.5 # krush 1

d4 $ degradeBy 0.4 $ slow 1 $ jux (rev) $ off (0.25) (# s "glitch:3") $ note (slow 2 (off 0.125 (+12) (off 0.25 (+7) (slow 2 "d(3,8) a [c(3,8,2) e*2] e(3,8)")))) # s "casio:1" # speed "0.5" # room 0.5 # gain 0.7 # up "-7" -- # speed 0.9

do
  d1 $ s "bd bd sd ~"
  d2 $ s "808bd:1 cp ~ cp" # speed 4

do
  d1 $ qtrigger 1 $ filterWhen (>=0) $ s "bd bd sd ~"
  d2 $ qtrigger 2 $ filterWhen (>=0) $ s "808bd:1 cp ~ cp" # speed 4

d2 silence
hush

d6 $ note "c" # s "juno:7" # room 0.3 # speed 0.5
d7 $ slow 2 $ note "d? [c,e?] b4 c" # s "juno:8*4" # speed 0.5

d2 $ s "cello-plucked*4" # n (irand 15) # note (slow 2 (off 0.125 (+12) (off 0.25 (+7) "d*2 [g*3? a] [c3 e*2?] e" ))) # pan 0.4 # room 0.3

a3=[" e3 e4 gs4 b4 cs5", "g3 g4 b4 cs4 ", "b3 fs4 b4 cs5 ds5 ", "as3 fs4 as4 b4 ds5 ", "f3 ds4 gs4 cs5 ", "gs3 ds4 gs4 b4 cs5 ", "ds3 fs4 b4 cs5 ", "c4 gs4 bs4 ds4 "]
b3 = ["e3 e4 g4 b4 c5 ", "g3 g4 b4 cs5 ds5 ", "b3 fs4 b4 cs5 ds5 ", "as3 fs4 gs4 cs5 ", "f3 ds4 gs4 cs5 ", "gs3 e4 gs4 b4 cs5 ", "ds3 fs4 gs4 b4 cs5 ", "c4 ds4 gs4 cs5 "]

c3 = ["e3 e4 gs4 b4 cs5 ", "g3 f4 as4 ds5 ", "b3 e4 gs4 b4 ds5 ", "as3 fs4 as4 b4 ds5 ", "f3 ds4 gs4 cs5 ", "gs3 ds4 gs4 b4 cs5 ", "ds3 fs4 b4 cs5 ", "c4 gs4 as4 ds5 "]
rhythms = ["@5","@4","@3","@6","@7","@6","@5","@4"]


c4="<[e3 e4 gs4 b4 cs5 ] [g3 f4 as4 ds5 ] [b3 e4 gs4 b4 ds5 ] [as3 fs4 as4 b4 ds5 ] [f3 ds4 gs4 cs5 ] [gs3 ds4 gs4 b4 cs5 ] [ds3 fs4 b4 cs5 ] [c4 gs4 as4 ds4 ]>"

c5="<[f3 ds4 gs4 cs5 ] [as3 fs4 as4 b4 ds5 ] [b3 e4 gs4 b4 ds5 ] [ds3 fs4 b4 cs5 ]>"

c6="<[f3, ds4, gs4, cs5, ] [as3, fs4, as4, b4, ds5, ] [b3, e4, gs4, b4, ds5 ] [ds3, fs4, b4, cs5, ]>"




a3!!0

hush
d2 silence
unsolo 1
d1  $ slow 2 $ ghost $ chunk 4 (fast 2) $ s "~ SOPHIE_claps ~ SOPHIE_claps" # n 14 # room 0.1 # gain (range 0.6 1 rand)
d5 $ sometimes (# speed 2) $ chunk 4 (fast 2) $ s "808*8" # n (run 8) # speed 4 # krush 2 # gain (range 0.6 1 rand)

do
  d2 $ slow 1  $ s "midi" <| note (slow 2 ( off 0.125 (+12)(off 0.25 (+24)(struct "<[t*3 t*3]>" (slow 1 (parseBP_E (a3!!0)-12))) ))) # sustain 1.4 # amp (range 0.5 0.7 rand)-- # speed 2

  d2 $ degradeBy 0.0 $ slow 2  $ s "midi" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*3, t(10,12)]>" (slow 1 (parseBP_E (b3!!6)-12))) ))) # sustain 0.5 # amp (range 0.1 0.7 rand)

  d2 $ degradeBy 0.5 $ slow 1  $ s "midi" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 1 (parseBP_E (c3!!)-12))) ))) # sustain 0.75 # amp (range 0.1 0.7 rand)

  d3 $ degradeBy 0.1 $ slow 1 $ s "midi" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 2 (parseBP_E (c5)-12))) ))) # sustain 0.75 # amp (range 0.1 0.7 rand) # midichan 1

  d4 $ degradeBy 0.3 $ slow 2  $ s "cello-plucked" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*3, t(10,12)]>" (slow 1 (parseBP_E (c5)-12))) ))) # amp (range 0.1 0.7 rand) # n (run 8)
hush

  do
    d2 $ rotR 0.125 $ degradeBy 0.1 $ slow 2  $ s "midi" <| note (slow 1 ( off 0.125 (+12)(off "+0.125" (+24)(struct "<[t*3, t(10,12)]>" (slow 2 (parseBP_E (c4)-12))) ))) # sustain 0.5 # amp (range 0.1 0.7 rand)-- # speed 2
    d3 $ rotR 0.125 $ degradeBy 0.4 $ slow 2  $ s "ukulele" <| note (slow 1 ( off 0.125 (+12)(off "-0.25" (+24)(struct "<[t*3, t(10,12)]>" (slow 2 (parseBP_E (c4)-12))) ))) # amp (range 0.1 0.7 rand) # n (run 6)-- # speed 2
    d4 $ rotR 0.125 $ degradeBy 0.3 $ slow 2  $ s "cello-plucked" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*3, t(10,12)]>" (slow 2 (parseBP_E (c4)-12))) ))) # amp (range 0.1 0.7 rand) # n (run 8)

  do
    d3 $ degradeBy 0.1 $ slow 1  $ s "midi" <| note (slow 1 ( off 0.125 (+12)(off "+0.125" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 2 (parseBP_E (c5)-12))) ))) # midichan 1 -- # sustain 0.75 # amp (range 0.3 0.7 rand)-- # speed 2
    d3 $ degradeBy 0.2 $ slow 1  $ s "ukulele" <| note (slow 1 ( off 0.125 (+12)(off "-0.25" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 2 (parseBP_E (c5)-12))) ))) # amp (range 0.1 0.7 rand) # n (run 6)-- # speed 2
    d2 $ degradeBy 0.3 $ slow 1  $ s "cello-plucked" <| note (slow 1 ( off 0.125 (+12)(off "+0.25" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 2 (parseBP_E (c5)-12))) ))) # amp (range 0.1 0.7 rand) # n (run 8)
    d5 $ degradeBy 0.0 $ slow 1  $ s "arpy" <| note (slow 1 ( off 0.125 (+12)(off "+0.5" (+24)(struct "<[t*2, t(5,8), t*8]>" (slow 2 (parseBP_E (c5)))) ))) # amp (range 0.1 0.5 rand) # speed 0.5 # room 0.1

    hush

  d3 $ slow 1  $ s "arpy" <| note (slow 2 ( off 0.125 (+12)(off 0.25 (+24)(struct "t*8 [t*3? t] [t t*2?] t*3" (slow 1 (parseBP_E (a3!!5)-12))) ))) # room 0.5 # speed 1 # gain (range 0.9 1.2 rand) # krush 5

d2 $ slow 1  $ s "midi" >| note (slow 2 ( off 0.125 (+12)(off 0.25 (+24)(struct "t*2 [t*3? t(3,8)] [t(5,8) t*2?] t" (a4)) ))) # pan 0.4 # room 0.3 -- # sus 0.85 # amp (range 0.6 0.8 rand)

d3 $ s "cello-bowed*4" # legato 3 # n (irand 18) # room 0.2 # pan 0.6
d3 $ s "ukulele*16" # n (irand 14) # room 0.3 # note ((a3!!0))
d4 $ iter 2 $ s "flbass*16?" # n (irand 17) # note ((c5)+13) # room 0.3 # krush 2 # nudge 0.5
d4 $ iter 4 $ s "{flbass!17}%16" # n (irand 17) # note "c f d g b" # room 0.3 # krush 2

d1 $ s " 808bd:1 < ~ [ ~ 808bd:1?] > ~ cp" # room 0.5 # krush 10 # speed 1

unsolo 2
d8 silence
hush

d2 $ slow 2 $ ghost  $  s "industrial" <| n (run 32) # pan 0.6
d3 $ s "{mouth!15}%16" # n (run 15) # pan 0.4

d2 $ s "808bd:1" # speed 4 # room 0.5 # krush 4
d3 $ s "hh*8" # gain 1.2
d4 $ loopAt 1 $ s "foo" # n 11 # room 0.3

let pats =
      [
        ("a", stack [n "c4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[c3,g4,c4]" # s "superpiano"# gain "0.7"
                    ]
        ),
        ("b", stack [n "d4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[d3,a4,d4]" # s "superpiano"# gain "0.7"
                    ]
        ),
        ("c", stack [n "f4 c5 g4 f4 f5 g4 e5 g4" # s "superpiano" # gain "0.7",
                     n "[f4,c5,f4]" # s "superpiano"# gain "0.7"
                    ]
        )
      ]
in
d1 $ ur 12 "a b c" pats []

let pats = [("drums", s "drum cp*2"),
            ("melody", s "arpy:2 arpy:3 arpy:5"),
            ("craziness", s "cp:4*8" # speed ( sine + 0.5))
           ]
    fx = [("higher", (# speed 2))]
in
d1 $ ur 8 "[drums, melody] [drums,craziness,melody] melody:higher" pats fx

d1 silence
d2 $ s "[bd sd, hh*4]" # speed 1 # room 0.4
d4 $ iter "4" $ off ("0.25") (# s "808bd") $ n ( "1(3,8)") # s ("808ht") # room 0.1 # krush 4  # speed ("2 4")
d1 $ n (iter "1" ("1(3,8)")) # s ("808bd") # room 0.4 # krush 9  # speed (range 8 1 saw)

d1 $ slow 1 $ sound "[rash]" <| n ((run 16)+32)
setcps 0.565
d8 $ fast 1 $ s "midi" <| n (slow 1 "[<f3(3,8) c3(2,6) e3(3,8,0) d3(2,4) <f3(3,8) f3(5,8,1)> <e3(2,6) [e3 g3]>>,<a1@2 g1@2 c2@2>]"+15) # amp (range 0.7 0.9 rand) # sustain 10

d2 $ loopAt 2 $ jux (# speed 1) $ s "aaron:7" # room 0.7 # speed 0.5 # gain 1.5

d9 $ loopAt 2 $ splice 8 (run 8) $ s "aaron:7" # room 0.7 # speed 1 # gain 1.5

p "washer" $ loopAt 2 $ splice 8 "[<0 2 4 6> ~ ~ ~ ~ ~ ~ [7?]]" $ s "aaron:7" # room 0.7 # speed 1 # gain 1.5

p "washer" $ loopAt 2 $ splice 8 "[<0 2 4 6> ~ ~ ~] <~ [~ 0 [~ 0?] [~ 0?]]>" $ s "aaron:7" # room 0.7 # speed "2 2 1" # gain 1.5

p "washer" silence

d7 $ loopAt 2 $ splice 8 "<[~ ~ ~ ~ ~ 5 6 ~] ~>" $ s "aaron:7" # room 0.7 # speed 1 # gain 1.2

d4 silence

d2 $ loopAt 2 $ jux (# speed 1) $ splice 4 (fast 2 "0 1") $ s "aaron:7" # room 0.7 # speed 0.5 # gain 1 # legato 0.5

d3 $ loopAt 2 $ every 4 (randslice 16) $ every 4 (fast 2) $ splice 16 (fast 4 "1 <1 3> 2 2") $ s "aaron:7" # room 0.7 # speed (range 1 0.25 saw) # gain 1 # djf 0.9 # squiz (range 1 2 saw)

d3 $ loopAt 2  $ every 4 (randslice 16) $ every 4 (fast 2) $ splice 16 (fast 4 "1 <1 3> 2 2") $ s "aaron:7" # room 0.7 # speed (range 1 0.25 saw) # gain "1 [1 0] [0 1] [0 0]" # djf 0.9 # squiz (range 1 2 saw)

-- d3 $ loopAt 2 $ every 4 (randslice 16) $ every 4 (fast 2) $ splice 16 (fast 4 "1 <1 3> 2 2") $ s "aaron:7" # room 0.7 # speed (range 1 0.25 saw) # gain 1 # djf (slow 0.5 (segment 200 (range 0.8 1 isaw ))) # squiz (range 1 2 saw)

d4 $ loopAt 2 $ splice 16 "0 ~!15" $ s "aaron:7" # room 10 # krush 100 # speed "[1]"

d4 $ loopAt 2 $ splice "<[8 16] 16>" "0 ~@3 ~ 0? ~ ~" $ s "aaron:7" # room 10 # krush 100 # speed "[1,8]"

d4 $ loopAt 2 $ splice "8" "0 ~@3 ~ 0 ~ ~" $ s "aaron:7" # room 10 # krush 100 # speed "[1,8]"

d4 $ loopAt 2 $ splice 16 "0 ~@3 ~ 0? ~ ~" $ s "aaron:7" # room 10 # krush 100 # speed "[1]"

d4 $ loopAt 2 $ splice 8 "0 ~@3 ~ ~ ~ ~" $ s "aaron:7" # room 10 # krush 100 # speed "[2, 1, 0.75]"

d5 $ loopAt 2 $ splice 16 "<[~ ~ 0 ~]*4 [~ ~ 0? 0?]*4 >" $ s "aaron:7" # room 1 # krush 1 # speed 8

d5 $ loopAt 2 $ splice 32 "<[{0 3 5 4 7}%16]*2 >" $ s "aaron:7" # room 1 # krush 1 # speed "[{8 4 3 2 1}%<4 8 16>]*2"

d5 $ loopAt 2 $ splice 16 "<0*32>" $ s "aaron:7" # room 1 # krush 1 # speed "[{8 4 3 2 1.5}%<16>]*2" # gain "{1 1 0 1 1 0 1}%16" -- # speed "4"

d5 $ loopAt 2 $ splice 16 "<0*32>" $ s "aaron:7" # room 1 # krush 1 # speed ("[{8 4 3 2 1.5}%<32>]*2") # gain (iter 1 "{1 1 1 0 1}%32")
d5 $ loopAt 2 $ splice 16 "<[{0 3 5 4 7}%16]*2? >" $ s "aaron:7" # room 1 # krush 1 # speed "4" # crush "{1 2 3 5 8}%32" -- # gain "{0 1 0 1 0}%16"

d6 $ loopAt 2 $ splice 16 "[~ ~ 0 ~]*2" $ s "aaron:7" # room 2 # krush 5 # speed 8

d7 $ splice 16 "4*16" $ s "aaron:7*16" # room 0.75 # speed (range 8 16 isaw) # krush 1

d9 $ splice 16 ("<~ 3?> 2 ~ [2 <[~ [0*3]] ~>]") $ s "aaron:7" # speed 24 # squiz 2 # room 0.5 # legato 0.25

d9 $ sometimesBy 0.3 (splice 8 "[3 3 3 3*6]!2") $ splice 16 ("3*16") $ s "aaron:7*32" # speed (24) # squiz 2 # room 0.5 # legato 0.25


d2 $ n "0 [~ 4  ? ~ 5?] <3 1 2>? [~ 7? <13? 11>]" # s "cello-plucked" # note "<<d fs a> [b4 g?] f c> d e c" # room 0.3 # gain (range 1 1.2 rand)
d2 $ struct "[t ] [t? [~ t ~]] [t? ] [t? [~ t ~]]" $ n "0 [~ 4? ~ 5?] <3 1 2>? [~ 7? <13? 11>]" # s "cello-plucked" # note "<f c <d fs a> [b4 g?]> d e c" # room 0.3 # gain (range 1 1.2 rand)
d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp ((range 0.5 0.7 rand)*"1 [1 ~!7] <0 1? 0 1?> [[1 ~!7]? 1?]") # sustain 2
d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp (slow 4 (range 0.4 0.7 perlin)) # sustain 2
d2 $ note ("1"+(c6)) # s "midi"
d5 $ degradeBy 0.0 $ s "rash" <| n (108 + "{0 2 4 5 9 11 12 14 <16 19 23 24>}%[20]") # cutoff (slow 8 (tri*1500)) # room 0.4 # gain 0.8 # pan perlin

d4 $ loopAt 2 $ chop 32 $ s "IGLOOGHOST_vocals:18" # delayIn # gain 0.6
d10 silence

d10 $ chunk 4 (fast 2) $ ccn "73*128" # ccv ("[30 [40 30 20]] 10 [0 10 20 30 40 50 60 70]") # s "midi" # midichan 2

tonerow0 = "<[d, b, g] [cs,fs, c6] [c, ds, a] [e,f,as]  >" -- c e ds f a as d cs b fs g c6
tonerow1 = "<[c, f, d]!1 [e,a,cs]!1 [ds, as, b4]!1 [fs,g4, c]!1 >" -- c e ds f a as d cs b fs g c6
tonerow2 = "<[c,e,a] [c,ds,as] [c,f,d] [c,a,cs] [c,as,b] [c,d, fs] [c,cs,g] [c,b,c6]  >"

d1 $ slow 1 $ trunc (wchoose [(0.125, 0.05), (0.25, 0.9), (0.5, 0.05)]) $ s "midi" <| note "{c e ds f a as d cs b fs g c6}%8" # amp (range 0.6 0.7 rand)
d2 $ fast 4 $ bite 4 "<0!4 1!4 2!4 3!4>" $ rev $ degradeBy (0.3) $ s "midi" <| note ("{c e ds f a as d cs b fs g c e ds f a}%16"+12) # amp (range 0.2 0.5 rand)
d3 $ degradeBy "<[0 0.3 0.5] [0 0.5]>" $ iter 2 $ s "midi" <| note "[c4(5,8),c3(5,8)]" # (range 0.6 0.8 rand) -- # sustain 2
d4 $ degradeBy "<[0 0.3 0.5] [0 0.5]>"$ struct "<t(3,8) t(3,8,2)>" $ s "midi" <| note (tonerow0) -- # sustain 2 # amp (range 0.5 0.6 rand)
d4 $ s "midi" <| note (tonerow0) # sustain 2 # amp (range 0.5 0.6 rand)

improviseChords c2 "org" "midi" ["@2","@1","@5","@2","@1","@5"]
improviseChords c2 "org" "midi" ["@2","@2","@1","@5","@2","@2","@1","@5"]

d1 $ fast 2 $ iter 4 $ struct "t(3,8)" $ note (slow 8 c2) # s "midi"

d7 $ ccv (segment 128 (slow 4 (range 60 100 saw))) # ccn "73" # s "midi"

d2 $ s "808bd:1*2" # speed 8 # room 0.5

d7 silence



d2 $ struct "[t ] [t? [~ t ~]] [t? ] [t? [~ t ~]]" $ n "0 [~ 4? ~ 5?] <3 1 2>? [~ 7? <13? 11>]" # s "cello-plucked" # note "<f c <d fs a> [b4 g?]> d e c" # room 0.3 # gain (range 1 1.2 rand)

d2 $ n "0 [~ 4  ? ~ 5?] <3 1 2>? [~ 7? <13? 11>]" # s "cello-plucked" # note "<f c <d fs a> [b4 g?] > d e c" # room 0.3 # gain (range 1 1.2 rand)

d4 $ struct "t*<12>" $ note (arp "<updown>" (off 0.5 (+"-12") (off 0.25 (+"-7") "<[f] c <d fs a> [b4 g?] > d e c"))) # s "midi" # amp ((range 0.5 0.7 rand)*"1 [1 ~!7] <0 1? 0 1?> [[1 ~!7]? 1?]") # sustain 2 # midichan 1



d3 $ struct "t*<12>" $ note (arp "<updown>" (off 0.5 (+"-12") (off 0.25 (+"-5") "<[f] c <d fs a> [b4 g?] > d e c"))) # s "midi" # amp ((range 0.5 0.7 rand)*"1  ") # sustain 2 # midichan 1

d3 $ note "{c d e g b c6 d6 e6 f6 g6 b6 c7}%16" # s "midi" # amp 0.1 # midichan 2

d10 silence

d10 $ whenmod 4 3 (fast 2) $ ccn "73*128" # ccv ((segment 128 ((range 10 127 saw)))) # s "midi" # midichan 2
d10 $ whenmod 4 3 (fast 2) $ ccn "73*128" # ccv ((segment 128 ((range 64 100 saw)))) # s "midi" # midichan 2
d10 $ slow 4 $ ccn "73*128" # ccv ((segment 128 ((range 64 127 saw)))) # s "midi" # midichan 2
d10 $ slow 4 $ ccn "73*128" # ccv ((segment 128 ((range 64 100 tri)))) # s "midi" # midichan 2
-- repro
d6 $ slow 1 $ struct "t@3 <f@3 t>"$ note ("<[c5,e5,<c6 a5>] [c5,e5,g5] [c5,e5,a5] [b4,d5,[a5 <g5 b5>]]>"+"[0]") # s "midi" # midichan 2
--repro
d6 $ slow 1 $ note ("<[c5,d5,f5,<c6 <g5 a5>>] [c5,d5,e5,g5] <[c5,e5,a5]> [b4,d5,[a5 <g5 b5>]]>"+"0") # s "midi" # midichan 2

d6 $ slow 1 $ note ("<[c5,d5,f5,<c6 <g5 a5>>] [c5,d5,e5,g5] <[c5,e5,a5]> [b4,d5,[a5 <g5 b5>]]>"+"[<[0 1] [2 3] [3 5] [6 7]>]") # s "midi" # midichan 2

d6 $ slow 1 $ note ("<[c5,d5,f5,<c6 <g5 a5>>] [c5,d5,e5,g5] <[c5,e5,a5]> [b4,d5,[a5 <g5 b5>]]>"+"[<0!7 [<[1 2][-1 -2 ]>]>]") # s "midi" # midichan 2

d4 $ slow 4 $ note ("<[c@2 d [e@6 d@2]] [[c [g@3 f]] [e@6 d@2]]>"+"[12]") # s "midi" # amp ((range 0.5 0.7 rand)*"1  ") # midichan 1

d7 $ slow 2 $ note ("<e ~@3> <~@3 [e c g f] >"+"[12]") # s "midi"  # amp ((range 0.5 0.7 rand)*"1  ") # midichan 1

d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp ((range 0.5 0.7 rand)*"1 [1 ~!7] <0 1? 0 1?> [[1 ~!7]? 1?]") # sustain 2

do
  hush
  d1 $ fast 2 $ whenmod 16 15 (const $ fast 0.75 $ palindrome $ degradeBy 0.3 $ scramble 12 $ s "gretsch" <| n "[20 23 22] [15 12 15] [20 12 15] [22 20 23]" # gain ((range 1.1 0.75 rand)) # room 0.4 # speed ("5")) $ s "gretsch" <| n "[<13 22> ,[~ 19]/2]" # speed 3 # room 0.4
  d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp ((range 0.5 0.7 rand)*"1 [1 ~!7] <0 1? 0 1?> [[1 ~!7]? 1?]") # midichan 1 # sustain 2

d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp (slow 4 (range 0.4 0.7 perlin)) # sustain 2 # midichan 1

d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp (slow 4 (range 0.4 0.7 perlin)) # sustain 2 # midichan 1

d2 $ note ("1"+(c6)) # s "midi"
d5 $ degradeBy 0.0 $ s "rash" <| n (108 + "{0 2 4 5 9 11 12 14 <16 19 23 24>}%[20]") # cutoff (slow 8 (tri*1500)) # room 0.4 # gain 0.9 # pan perlin

d2 $ n "0 [~ 4  ? ~ 5?] <3 1 2>? [~ 7? <13? 11>]" # s "cello-plucked" # note ("[25 13 1 -11]*6"+(c5)) # room 0.3 # gain (range 1 1.2 rand)

d1 $ fast 2 $ whenmod 16 14 (const $ palindrome $ degradeBy 0.1 $ s "gretsch" <| n "[20 23 22] [15 12 15] [20 12 15] [22 20 23]" # gain ((range 1.1 0.75 rand)) # room 0.1) $ s "gretsch" <| n "[13 22 13 22,[~ 19]*2,[<17 ~@7>]]" # room 0.1


d6 silence

d5 $ slow 4 $ s "notes:2" >| note (scale "major" ("<0>(2,2)") +"f2") # room 2.3 #krush 1.7 # gain (range 1.0 1.4 rand)


d3 $ struct "t*<12>" $ note ("[25 13 1 -11]*6"+(c5)) # s "midi" # amp (slow 4 (range 0.4 0.7 perlin)) # sustain 2


d1 $ slice 8 (segment 4 "7") $ s "ruiqi" # note "c" # legato 1 # room 0.3 -- # krush 8
d2 $ slice 8 (segment 2 "7") $ s "~ ruiqi" # note "c" # legato 0.03 # speed "[1]" # krush 20 # room 5
d3 $ slice 8 (segment 8 "7") $ s "ruiqi(<1 1 1 3>,8,<0 5 0 1>)" # note "c" # legato 0.1 # speed "[0.25]" # krush 50 # room 5
d4 $ slice 8 (segment "<8 16>" "7") $ s "ruiqi" # note "{<<a4@4 g4 g4 b4 b4> c> e f g b c6}%<8 16>" # legato 0.5 # room 0.3 # krush 8
d5 $ slice 8 (segment 16 "10") $ s "ruiqi" # note "c" # legato 0.1 # squiz 10 # room 0.6 # krush 100 # speed 8 # gain (segment 16 (range 0.9 1.1 rand))
d6 $ slice 16 (segment 8 "9") $ s "ruiqi" # note "<[e4, gs3(3,8)] [gs4, b3(3,8,1)] [fs4,a3(3,8,2)] [ds5 e5,gs3(3,8,2)]>" # room 0.5 # legato 0.5



d1 $ sound "[<808bd:4(3,8) 808bd:4(5,8) 808bd:4(3,8) 808bd:4>, ~ 808:3]" # room 0.95 # krush 9 # speed (slow 4 ("<1.5 1>"))
d2 $ struct "<t(3,8) t(5,8) t(3,8) t*128>" $ ccv ((segment 128 (range 127 0 saw))) # ccn 0 # s "midi"

d3  $ ccv (slow 4 (segment 128 (range 0 127 saw))) # ccn 1 # s "midi"

d1 $ s "midi*10?" # note "c e f g b" # amp (range 0.5 0.9 rand)

d2 $ iter 2 $ struct "t(7,10)" $ s "midi" <| note ("c f b f e"-12) # midichan 1

d3 $ slow 2 $ s "~ sd ~ sd ~ sd ~ sd ~ sd" # speed 4 # nudge 0.1 # room 0.5

d4 $ iter 5 $ struct "t(6,10)" $ s "midi" <| note ("[c e <f g f c4>]"+0) # midichan 2 # amp 0.75

d1 $ ccv (segment 32 (range 0 127 $ slow 1 saw)) # ccn "30" # s "midi" -- amount control number 30
d2 $ ccv (segment 32 (range 0 127 $ slow 4 tri)) # ccn "31" # s "midi" -- power control number 31

d3 $ s "[909*4, 808:1*16?, ~ 808:3 ~ 808:3]" # room "0.9" # speed 1 # gain 1

d4 $ jux (striate 2) $ sometimes (rev) $ every 4 (const $ sound "arpy*12" # n (run 11) # speed "1" # gain (range 0.8 1 rand) # speed 2) $ sound "arpy*8" # n (run 8) # room "0.3" # gain (range 0.8 1 rand) # speed (2)

d1 $ fast 4 $ s "midi" <| note ("[c,e,<g a b>,c4*4]") # midichan 0 

d2 $ fast 2 $ struct "t(3,8,<0 1 2 3>)" $ palindrome $ s "midi" <| note "c d e f g a b c6" # midichan 1

d4 silence
