

d1 $ density 2 $ brak $ sound ("glitch2:0 yeah:3? glitch:4 glitch:1") # room "0.15" # size "0.1" # speed "0.8" # gain "1.1"

d2 $ density 0.5 $ every 4 (# speed "0.95") $ "<0 1 0.5 0.125>" <~ sound "[808bd:3][808bd:7*2?][808bd:0*2?][808bd:5*2?]" # gain "1.2 0.7 0.8 0.9" # shape "0.9" # room "0.2" # speed "1.95" # up "-5"

d3 $ every 4 (density 2) $ sound "dr2*8" # up "-5" # n (irand 6) # speed "12" # cut "1" # pan (rand) # room "0.1" # gain (range 0.75 1.2 $ rand) # crush "1"

d4 $ slow 1 $ jux (rev) $ gap 4 $ sound "oF:2*2" # cut "1" # up "<2 -1 -0 -5>" # begin "0" # room "0.65" -- # crush 4 # gain "1.0"

d5 $ degradeBy 0.1 $ s "lighter*16" # n (irand 33) # gain (range 0.75 1.3 $ rand)

-- MIDI pattern out
d6 $ ccn "31*128" # ccv (range 0 127 $ slow 4 saw) # s "midi"
d6 $ ccn "30*128" # ccv (range 127 0 $ slow 1 saw) # s "midi"
--brightness
d7 $ n "0*32" # s "midi" # amp (range 1 0 $ slow 1 saw)
d7 $ n "0*32" # s "midi" # amp 1

-- for cellular downbeat && wipes beat
-- send CC instead of notes, notes drops out VERY IMPORTANT
d7 $ n "0*64" # s "midi" # amp (range 1 0 $ density 1 saw)
d7 $ ccn "31*128" # ccv(range 127 0 $ slow 2 saw) # s "midi"
d8 $ slow 1 $ ccn "30" # ccv "<0 1 2 3>" # s "midi"

-- for circles
d7 $ ccn "31*128" # ccv (range 0 120 $ perlinWith (saw*8)) # s "midi"

-- set cycles per second
setcps 0.5625 -- tidal's default

d4 silence


-- go with d1 above
d8 $ density 2 $ brak $ n "1 1? 1 1" # s "midi" # amp "1 0 1 0 1 0 1 0"

-- go with d2 above
d8 $ density 0.5 $ every 4 (# speed "0.95") $ "<0 1 0.5 0.125>" <~ n "[1][1*2?][1*2?][1*2?]" # s "midi" # amp "1.0 0.7 0.8 0.9"

-- go with d4 below
d8 $ n "[<1? [~ 1]> <1 1>]" # s "midi" # amp"[<1 [0 1]> <0.5 0.1>]"

-- go with d5 above
d9 $ degradeBy 0.1  $ n "2*16" # s "midi" # amp (range 0.0 1.0 $ perlin)



hush
d9 silence

d1 $ sound "feel:6 feel:5*8? feel:3 feel:1" # room 0.9 # slow 4 (speed (range 8 0.5 saw))
d2 $ sound "casio:1*16?" # up "-6" # room 0.9 # slow 4 (speed (range 1 1.5 saw )) # gain (range 0.5 1 rand)
d3 $ sound "<~ bd:3*8?> bd:3? sn:2? [~ bd:3?]" # room 0.9 # speed (range 8 1 saw)
d4 $ sound "[<feel:6? [~ feel:6]> <feel:3 feel:4>, feel:1*16?]" # room 0.9 # size 0.9 # gain "1.1"

d9 $ slow 1 $ s "<gong:5? gong:2?>" # cut 1 # gain "1.2" # room "0.6" --


d4 $ every 4 (density 2) $ sound "arpy*16 arpy*2" # speed (density 1 $ range "-2" "6" saw) # up "6" # room "1.5"
d4 $ every 4 (density 2) $ sound "arpy*8 arpy*1 cp*3 bd*2?" # speed (density 1 $ range "-2" "6" saw) # up "6" # room "1.5"

let harm = pF "harm"
let timbre = pF "timbre"
let morph = pF "morph"
let engine = pI "engine"

let vwet = pF "verbwet"
let vtime = pF "verbtime"
let vdamp = pF "verbdamp"
let vhp = pF "verbhp"
let vfreeze = pI "verbfreeze"
let vdiff = pF "verbdiff"
let vgain = pF "verbgain"

d1 $ s "bd bd sd ~" # vwet 1 # vtime 0.5 # vdamp 0.5 # vgain 1 # vfreeze 0


let ringsfreq = pF "ringsfreq"
let ringsstruct = pF "ringsstruct"
let ringsbright = pF "ringsbright"
let ringsdamp = pF "ringsdamp"
let ringspos = pF "ringspos"
let ringsmodel = pI "ringsmodel"
let ringsintern_exciter = pI "ringsinternal"
let ringstrig = pI "ringsinternal"
let ringseasteregg = pI "ringseasteregg"
let ringsbypass= pI "ringsbypass"

setcps 0.45

d1 $ slow 0.5 $ n "[0*8, 0(3,8)]" |-18
# sustain 0.9
# s "plaits"
# engine 6
# room 0.7
# gain 0.75
# harm (range 0.8 1.0 $ perlin)
# timbre (range 0.45 0.5 $ perlin)
# slow 8 (morph (range 1.0 0.9 $ square))  -- # vwet 1.0 # vtime 0.95 # vdamp 0.0 #  vhp 0.90 # vfreeze 0 # vdiff 0 # gain 1.2
hush

d2 silence

d2 $ sometimesBy 0.4 (# ringseasteregg 1)
$ sometimesBy 0.7 (# ringsbypass 1)
$ s "hh*16"
# ringsbright rand
# ringsfreq 90
# slow 2 (ringspos saw)
# slow 2 (ringsmodel (run 4))
# ringsstruct 0.75
# ringsdamp 0.4
# ringstrig 1
# ringsmodel (irand 4)
# gain (range 0.9 1.5 rand)

d2 $ s "sn*16" # ringsbright 0.5 # ringsfreq 60 # ringspos 0.9 # ringsmodel 1 # ringsstruct 0.75 # ringsdamp 0.4 # ringstrig 0

d1 $ s "sn*16" # ringsstruct 0.9 -- # rbright 1 # rstruct 1

d11 $ slow 2 $ n "6 0 0 0" |-18 # sustain 0.4 # s "plaits" # engine 13 # size 0.94 # gain 1.2 # orbit 0-- # harm (range 0.8 1.0 $ perlin) # timbre (range 0.45 0.5 $ perlin) # slow 8 (morph (range 1.0 0.9 $ tri))

d1 $ sound "[sn [sn sn]][sn [sn sn*3]][sn [sn*5 sn]][bd bd]" # dry " 0" -- # orbit "1 1" -- # dry "0.0" # orbit "0 0"
hush

d1 $ "bd bd sd ~" # delay 0.5 # delayfb 0.7 # delaytime 0.9

d2 $ sound "hh*16" # vwet "0" # vtime 0.95 # vdamp 0.0 # vhp 0.00 # vfreeze 0 # vdiff 0.9625 # orbit 0

linput = pI "linput"
lname = pS "lname"

once $ s "looper" # n 4

d1 $ s "[bd bd sn:1 ~]" # ringsbright 0.95 # ringsfreq 13 # ringspos 1 # ringsmodel 1 # ringsstruct 0.95 # ringsdamp 0.324 # gain 1.2 # room 0.6

d2 $ s "[bd bd sd ~]" # room 0.94 # speed 0.6

d3 $ slow 2 $ s "looper" -- record slow 2
d4 $ slow 1 $ s "loop" # n 1 # gain 5
d5 $ slow 1 $ s "loop" # n 2 # gain 5

d3 $ slow 1 $ s "loop" # room  0.93 # gain 2 # pan 0.5

d4 $ slow 1 $ gap 32 $ s "loop" # gain 5 # room  0.93 # waveloss 50 # pan 1-- # up "-12"-- # speed ""-- # ringsbright 0.75 # ringsfreq 30 # ringspos 0.9 # ringsmodel 1 # ringsstruct 0.75 # ringsdamp 0.24

d4 silence
d4 $ slow 2 $ s "loop" # gain 1 # room 0.93
d3 $ brak $ chop 32 $ slow 2 $ s "loop" # gain 1.6 # room 0.63 # speed "<1>" # hpf (range 800 700 tri)
hush
-- piano
d1 $ chunk 4 (fast 2 . (|- n 12)) $ off 0.25 (|+ 7) $ struct (iter 4 "t(5,8)") $ n (scale "ritusen" "0 .. 7") # sound "superpiano" # sustain "2" # velocity rand # room 0.8 # size 0.2 # lpf 3000 # gain 1.2

d1 $ chunk 4 (# speed 2) $ sound "bd hh sn cp"

d3 $ slow 2 $ ply 2 $ n ("f'maj7 a'dom7 d'min7") # sound "superpiano" # sustain "2" # velocity (range 0.7 1 rand) # room 0.8 # size 0.2 # lpf 3000 # gain 0.9

d3 $ slow 2 $ ply 2 $ n ("f'maj7 a'dom7 d'min7") # sound "superpiano" # sustain "2" # velocity (range 0.7 1 rand) # room 0.8 # size 0.2 # lpf 2000 # gain 0.9

d2 $ slow 2 $ n (arp "up" "f'maj7 f'maj7 a'dom7 a'dom7 d'min7 d'min7") # sound "superpiano" # sustain "2" # velocity (range 0.7 1 rand) # room 0.8 # size 0.2 # lpf 3000 # gain 0.9 # pan 1.0
hush
d4 silence
d1 $ slow 4 $ sometimesBy 0.4 degrade $ n (arp "diverge" "a'min'4 a'min7 a'min7 bf'maj7'i bf'maj7'i d'min7'ii d'min'4 c'dom7'iii f'maj'4 f'maj'4 f'maj7") |- 12 # sound "superpiano" # sustain "4" # velocity (range 0.7 1 rand) # room 0.8 # size 0.62 # lpf 2000 # gain 0.9

d1 $ slow 4 $ sometimesBy 0.4 degrade $ n (arp "diverge" "a'min'4 a'min7 a'min7 bf'maj7'i bf'maj7'i d'min7'ii d'min'4 c'dom7'iii f'maj'4 f'maj'4 f'maj7") |- 12 # sound "midi" # sustain "1.2" # velocity (range 0.5 1 rand) # gain 1.1

d4 $ slow 4 $ sometimesBy 0.8 degrade $ n (arp "diverge" "a'min'4 a'min7 a'min7 bf'maj7'i bf'maj7'i d'min7'ii d'min'4 c'dom7'iii f'maj'4 f'maj'4 f'maj7") # s "<supertron, supersquare>" |- 12 # room 0.8 # gain 0.55 # djf (range 0.3 0.6 (perlinWith tri))# voice (perlinWith sine) # slow 4 (lfo perlin) # rate (10) # slow 4 (shape (perlinWith saw)) # pan perlin-- # lpf (slow 1 (range 10 4000 $ rand)) -- # pan 0.0

d5 $ slow 1 $ n ("2*4") |- 24 # sound "superpiano" # sustain "3" # velocity (range 0.7 1 rand) # room 0.8 # size 0.2 # lpf 3000 # gain 1

d4 silence
d2 $ chunk 4 (fast 2 . (|- n 12)) $ off 0.25 (|+ 7) $ struct (iter 4 "t(5,8)") $ n (scale "ritusen" "0 .. 7") # sound "superhoover"  -- # sustain "2" # velocity rand # room 0.8 # size 0.2 # lpf 3000 # gain 1.2

d3 $ slow 1 $ n (arp "<up down diverge>" "<a'maj9'8*2 e'dom7'8*2>") |- (24) # sound "superpiano" # sustain "0.7" # velocity (range 0.5 0.7 rand) # room 0.8 # size 0.2 # lpf 2500 # gain 0.9

d1 $ s "bd:2? bd? sd:1 [~ ~ bd?]" # gain 1.2 # room 0.85 # speed (slow 2 $ (range 0.1 8 sine))

d7 $ every 8 (density 2) $ s "hh*16" # room 0.5 # gain (range 0.8 1.5 rand) # speed (slow 4 $ range "4" "0.5" saw)

d4 $ s "looper" # n "<0 1 2 3 4 5 6 7>"

d5 $ s "loop" # n "[1,2,3,4,5,6,7]" # room "0.9" # gain "1" # delay rand # delayfb rand # delayt rand-- # pan "[0,0.1,0.3,0.5,0.55,0.7,0.9,1]"

once $ s "freeLoops"
d1 silence

d1 $ qtrigger 1 $ stack [
    s "rlooper" # n "<0 1 2 3>",
    s "loop" # n "[0,1,2,3]",
    s "808:1*4 bd!3"
] # room 0.7
d1 $ qtrigger 1 $ stack [s "olooper", s "loop"] # room 0.97 # size 0.8 # lpf (slow 4 (range 50 8000 saw))

d1 $ slow 2 $ qtrigger 1 $ s "olooper"

d2 $ slow 2 $ s "loop" # gain 1.6 # room 0.97 # size 0.8 -- # lpf (slow 4 (range 50 8000 saw))

d2 $ slow 2 $ s "aaron:2" # gain 1.6 # room 0.97 # size 0.8

d2 $ (jux brak) $ every 4 (density 2) $ every 2 (randslice 16) $ every 4 (degrade) $ struct ("t(2, 3)") $ slice 16 "4 6 9 14" $ sound "aaron:2" # room 0.9 # gain 1.4 # size 0.9 # speed "1"

once $ slow 2 $ s "loop"

d3 $ slow 2 $ s "loop"


d3 $ qtrigger 1 $ stack [s "olooper", s "loop"] # n 1 # room 0.97 # size 0.9 # speed (range 1 2 saw)-- # lpf (8000) -- # smear 2 # speed
d6 $ slow 4 $ s "gong" # gain 1.4 # speed 0.1 # cut 1

d3 $ (jux (# octersub 4)) $ slow 1 $ s "~ <sd>" # room 0.8 # gain 0.8 # krush 20 # speed 2.2 # size (0.8)

d5 $ every 4 (density 2) $ every 4 (degrade) $ struct ("t(3,8)") $ s "dr_few*8" # room 0.85 # krush 20 # speed (slow 1 (range 0.75 "< 2*4 5*4 6*4 9*4>" saw)) # gain 0.8

d5 $ every 4 (density 2) $ every 4 (degrade) $ struct ("t(2,3)") $ s "dr_few*8" # room 0.85 # krush 50 # speed (slow 1 (range 0.75 "< 2*4 3*4 7*4 8*4>" saw)) # gain 0.8 # up 0

d3 $ slow 1 $ s "~ circus:1" # speed (slow 1 (range 6 "-1" saw)) # cut 1 # room 0.9 # gain 0.7 # distort 4

d7 $ s "casio:2*16" # gain (range 0.5 0.8 rand) # room 0.5 # speed 2
hush

d2 $ (jux brak) $ every 4 (density 2) $ every 2 (randslice 16) $ every 4 (degrade) $ struct ("t(5,8)") $ slice 16 "4 6 9 14" $ sound "loop" # room 0.9 # gain 1.4 # size 0.9 # speed "1" -- # hpf 500

d1 $ silence

-- from estuary
-- slow 4 $ jux (slow 2) $ up ( "[f'maj'4*16 f'maj7*16]  [a'min'4*8 a'min7*8 bf'maj7'i*8 bf'maj7*8]") # sound "kurt:5"  # speed 0.87 # gain 1.1

slow 4 $ up ( "[f'maj'4*2 f'maj7*2]  [a'min'4*2 a'min7*2 bf'maj7'i*2 bf'maj7*2]") # sound "gtr:1"  # speed "-1" # gain 0.6 -- # gain (slow 4 $ range 0.4 0.7 sine)

d2 $ struct ("t(3,8)") $ s "dr_few:0*8" # speed (slow 1 (range 0.75 "< 2*4 3*4 7*4 8*4>" saw)) # gain 1.2 # room "0.4"

d1 $ density 2 $ brak $ sound ("glitch2:0 yeah:3? glitch:4 glitch:1") # gain "1.4"

chunk 8 (fast 3 . (|- n 12)) $ jux (rev) $  struct (iter 4 "t(5,8)") $ n (scale "ritusen" "0 .. 7") # sound "pluck?" # gain 1.1 # up "0"
d1 silence
d1 $ slow 4 $ up ( "<[[d'min'4*2 ]  [f'maj'4*2   ] [bf'maj'4*2  ] [f'maj'4*2  ]] [[df'maj'i*2 ]  [f'min'4*2   ] [af'maj'4*2  ] [b'maj9*2 b'maj'4*2 ]]  [[fs'maj'i*4 ]  [g'min7*4  ] ]  [[d'min'4*4 ]  [f'maj'4*4  ] ] [[df'maj'4*4 ]  [b'maj'4*8  ] ] [[f'sus4*2 ] [f'maj'4*2 ] [f'sus2*2 ] [f'maj*2 ]] [[d'min'4*4 ]  [f'maj'4*4   ] ]>") # sound "gtr:1"  # speed "-1" # gain 0.7 # lpf 700

d1 $ slow 4 $ up ( arp "pinkyup" "<[[d'min'4*2 ]  [f'maj'4*2   ] [bf'maj'4*2  ] [f'maj'4*2  ]] [[df'maj'4'i*2 ]  [f'min'4*2   ] [af'maj'4*2  ] [b'maj9 b'maj'4*2 ]]  [[fs'maj'i*4 ]  [g'min7*4  ] ]  [[d'min'4*4 ]  [f'maj'4*4  ] ] [[df'maj'4*4 ]  [b'maj'4*8  ] ] [[f'sus4*2 ] [f'maj'4*2 ] [f'sus2*2 ] [f'maj*2 ]] [[d'min'4*4 ]  [f'maj'4*4   ] ]>") # s "<supertron, supersquare>"  # room 0.8 # gain 0.55 # djf (range 0.3 0.6 (perlinWith tri)) # voice (perlinWith sine) # slow 4 (lfo perlin) # rate (10) # slow 4 (shape (perlinWith saw)) # pan perlin

slow 4  $ up ( "<[[d'min'4*2 ]  [f'maj'4*2   ] [bf'maj'4*2  ] [f'maj'4*2  ]] [[df'maj'i*2 ]  [f'min'4*2   ] [af'maj'4*2  ] [b'maj9*2 b'maj'4*2 ]]  [[fs'maj'i*4 ]  [g'min7*4  ] ]  [[d'min'4*4 ]  [f'maj'4*4  ] ] [[df'maj'4*4 ]  [b'maj'4*8  ] ] [[f'sus4*2 ] [f'maj'4*2 ] [f'sus2*2 ] [f'maj*2 ]] [[d'min'4*4 ]  [f'maj'4*4   ] ]>") # sound "gtr:1"  # speed "-1" # gain 0.7

struct ("t(3,8)") $ s "dr_few:0*8" # speed (slow 1 (range 0.75 "< 2*4 3*4 7*4 8*4>" saw)) # gain 1.3

density 2 $ brak $ sound ("glitch2:0 yeah:3? glitch:4 glitch:1") # gain "1.4"


hush
hydra

// disintegration
// by Ritchse
// instagram.com/ritchse

osc(5,0.1).modulate(noise(6),0.22).diff(o0)
  	.modulateScrollY(osc(2).modulate(osc().rotate(),0.11))
	.scale(0.72).color(0.99,1.014,1)
  	.out()

hydra = OSCTarget {oName = "hydra", -- Give your target a name
                           oAddress = "127.0.0.1", -- the target network address
                           oPort = 51000, -- the target network port
                           oPath = "/test", -- the OSC path
                           oShape = Nothing, -- The 'shape' - see below
                           oLatency = 0.02, -- the latency (to smooth network jitter)
                           oPreamble = [], -- Some fixed data to put at the start of messages
                           oTimestamp = MessageStamp -- The style of timestamp
                          }

tidal <- startTidal hydra defaultConfig

let p = streamReplace tidal

p 1 $ s "bd sn" # vowel "a"
p 1 silence

d7 silence
d7 $ ccn "0*128" # ccv(range 127 0 $ slow 1 saw) # s "midi"

d8 $ struct ("t(3,8)") $ ccn "1*8" # ccv(range 127 0 $ slow 1 saw) # s "midi"

d9 $ ccn "3" # ccv "<3 10 15 127>" # s "midi"



cloudspitch = pF "cloudspitch"
cloudspos = pF "cloudspos"
cloudssize = pF "cloudssize"
cloudsdens = pF "cloudsdens"
cloudstex = pF "cloudstex"
cloudswet = pF "cloudswet"
cloudsgain = pF "cloudsgain"
cloudsspread = pF "cloudsspread"
cloudsrvb = pF "cloudsrvb"
cloudsfb = pF "cloudsfb"
cloudsfreeze = pF "cloudsfreeze"
cloudsmode = pF "cloudsmode"
cloudslofi = pF "cloudslofi"
-- utility to group the 4 "blend parameters"
cloudsblend w s f r = cloudswet w # cloudsspread s # cloudsfb f # cloudsrvb r

d2 $ sometimesBy 0.4 (# ringseasteregg 1)
$ sometimesBy 0.7 (# ringsbypass 1)
$ s "hh*16"
# ringsbright perlin
# ringsfreq 17
# slow 2 (ringspos saw)
# slow 2 (ringsmodel (run 4))
# ringsstruct 0.75
# ringsdamp 0.4
# ringstrig 1
# gain (range 0.9 1.5 rand)

hush

d1 $ s "[bd bd sn ~, hh*16]" # cloudspitch "0" # cloudspos "0.01" # cloudswet "0.5" # cloudssize "0.22" # cloudsdens "0.72" # cloudstex "0.75" # cloudsgain "5" # cloudsspread "0.75"# cloudsrvb "0.6" # cloudsfb "0.66" # cloudsfreeze "0" # cloudsmode "0" # cloudslofi "0"
hush
d1 silence
d1 $ sound "[sn bd sn*2 bd, cy drum:1, drum:2]" |+| bandf "1500 1332 881" |+| bandq "120"
