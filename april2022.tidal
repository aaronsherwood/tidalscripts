-- start nature; reach sculpture - thislove (harp) starts; exit sculpture nature ends;
-- reach protective gear - female voice comes in, harp ends; they take off clothes over protective gear, female voice fades out
-- slience while flipping; then silence

do
  hush
  thisLove

do
  resetCycles

gormaduli
gormaduliQuarantine
thisLove
brokenHeart

d3 $ s "hh*8" # gain "1.4"

d4 $ s "~ sd" # room 0.3

paulineOliveros

hush

lock n offset = timeLoop n . (offset <~)




lock n offset = timeLoop n . ((offset |- (slow n $ run n)) <~)



do
  let num =  (irand 8)
  d4 $ degradeBy 0.0 $ struct "t(<4 5>,8)" $ lock 2 "<0 1>"  $ s "arpy*16" # n (irand 16) # room 0.3 # speed 0.25 # krush 3

d3 $ degradeBy 0.0 $ n (("{0 1 2 3 4}%8"+"0") ) # s "IGLOOGHOST_bass*8" # cut 1 # room "1"  # gain ((range 0.85 1 rand)) -- # up (slow 2 (range 1 8 saw)) # orbit 9

d2 $ degradeBy 0.0 $ lock 1 0 $ s "{IGLOOGHOST_bass}%8" # n (irand 5) # cut 1 # room "1"  # gain ((range 0.85 1 rand)) -- # up (slow 2 (range 1 8 saw)) # orbit 9

d4 $ degradeBy 0.0 $ lock 2 "<0 1>" $ struct "t(3,8)" $ s "IGLOOGHOST_bass*8" # n ((irand 26)+0) # cut 1 # room "1"  # gain ((range 0.85 1 rand)) -- # up (slow 2 (range 1 8 saw)) # orbit 9

d2 $ degradeBy 0.0 $ lock 2 "<1 2>" $ s "{arpy:0 arpy:1 arpy:2 arpy:3 arpy:4}%8" # cut 1 # room "1"  # gain ((range 0.85 1 rand)) -- # up (slow 2 (range 1 8 saw)) # orbit 9
d4 silence
setN notes modulo =
  (parseBP_E  ("{"++notes++"}%"++modulo))

lock n offset = timeLoop n . (offset <~)

poly ss nn mm l ll=
  do
    d2 $ degradeBy 0.0 $ lock l ll $ s ss >| n (setN nn mm) # cut 1 # room "1"  # gain ((range 0.85 1 rand))

poly "arpy" "8 4 0 5 30" "16" "2" "<0 1 2 4>"

poly "{arpy!5}%8"

hush

(setN "1 2 4 5 6" "8") :: String

let hhh = shuffle 8 (parseBP_E "1 2 3 4 5 6 7 8")

hhh

let ppp = (parseBP_E ("{++"(segment 5 (irand 8))++"}%8")) -- * (segment 5 (irand 8))

do
  let ppp = fast 5 (parseBP_E "{0 1 2 3 4}%8")
  ppp



playPat = (lock 4 "<0 1 2 3>" $ s "SOPHIE_fx" >|  n (select 1 [(parseBP_E ("{"++(unwords (map show [0..4]))++"}%16")), (segment 8 (irand 26))]))




lock n offset = timeLoop n . ((offset |- (slow n $ run n)) <~)

do
  let lkLength = 4
  let runOrRand = "< 1  >"
  let divi = "<8>"
  let shiftAmount ="<4>"
  let runAmount = [0,1..4] -- [0 .. 3]
  let sampleBank = "IGLOOGHOST_bass"
  let playPat = (lock lkLength (parseBP_E ("<"++(unwords (map show [0..lkLength-1]))++">")) $ s sampleBank >|  n (select runOrRand [(parseBP_E ("{"++(unwords (map show runAmount ))++"}%"++divi)), (segment divi (irand 32))]))
  d1 $ degradeBy 0.0 $ playPat |+| n shiftAmount # legato 1 # room 0.96 # speed 1 # krush "1" # gain "1"

  do
    let lkLength = 1
    let runOrRand = "0 0 1 1"
    let divi = "<4 [16@1 8@3]>"
    let shiftAmount ="<0 2>"
    let runAmount = [0,4..20] -- [0,3..15] -- [0 .. 3]
    let sampleBank = "tabla"
    let playPat = (lock lkLength (parseBP_E ("<"++(unwords (map show [0..lkLength-1]))++">")) $ s sampleBank >|  n (select runOrRand [(parseBP_E ("{"++(unwords (map show runAmount ))++"}%"++divi)), (segment divi (irand 32))]))
    d1 $ degradeBy 0.1 $ playPat |+| n shiftAmount # cut 1 # room 0.96 # speed "0.5 2" # krush "0" # gain "1"

blackRain
paulineOliveros
sunshine "xfade"
thisLove
brokenHeart
xfade "pauline oliveros" silence

p "chords" silence

  do
    let lkLength = 2
    let runOrRand = "<0 1>"
    let divi = "16" --"<16 [16 8 8 8]>"
    let euc = "<8 12>"
    let shiftAmount = "<0 2>"
    let runAmount = [0,1..4] -- [0,3..15] -- [0 .. 3]
    let sampleBank = (wchoose [("tabla",0.5), ("IGLOOGHOST_bass",0.0)])
    let playPat = (lock lkLength (parseBP_E ("<"++(unwords (map show [0..lkLength-1]))++">")) $ s sampleBank >|  n (select runOrRand [(parseBP_E ("{"++(unwords (map show runAmount ))++"}%"++divi)), (segment divi (irand 32))]))
    d1 $ degradeBy 0.0 $ (struct (parseBP_E ("t("++euc++","++divi++")"))) $ playPat |+| n shiftAmount # cut 1 # room 0.96 # speed "0.5 2" # krush "2" # gain "1" # up 4

d2 $ degradeBy 0.0 $ whenmod 8 7 (density 2) $ jux (# n 5) $ s "[[arpy*<4@3 8 12 9 6@2>] [arpy*2?]]" # speed (density 1 $ range "-2" "6" saw) # up "-8" # gain 0.75 # room 0.9 # krush 20 # n (0) # legato 2

-- d2 $ degradeBy 0.0 $ whenmod 8 7 (density 2) $ s "[[pluck*<4@3 8 12 9 6@2>] [pluck*2?]]" # speed (density 1 $ range "-2" "6" saw)  # gain 0.8 # room 0.9 # freeze 0.00 # krush 40 # n (0) # cut 2 # orbit 3

d3 $ slow 1 $ s "808bd:1 ~ sd? ~" # krush 10 # speed (range "<2 1.5 1 1>" 1 saw) # gain 1.1 # up "<22@2 9 -3>" # room 0.5

d4 $ loopAt 4 $ randslice 8 $ chop 16 $ s "SOPHIE_loops:9" # room 0.1

d5 $ slow 4 $ jux (striate 16) $ s "[sax:10 sax:21] sax:14" # gain 1 # legato 1 # room 0.8

d5 $ s "bd bd sd ~" # room 0.5

d1 silence

unsolo 1

hush
cabal install random --lib

import random

d6 $ s "arpy*8"

d1  $ timeLoop 1 $ 0 ~> n "{[0 | 1 | 2 | 3 | 4]}%8" # s "arpy"
d1  $ timeLoop 1 $ 0 ~> n "{0 1 2 3 4}%8" # s "arpy"

0 ~> (parseBP_E "{[0 | 1 | 2 | 3]}%8")

(parseBP_E "[0 | 1 | 2]")



[first,second..last]
[0,2..10]

hush

   |+| n 0 # cut 1 # room 0.6

playPat lkLength = do
  d1 $ (lock lkLength (parseBP_E ("<"++(unwords (map show [0..lkLength-1]))++">")) $ s "SOPHIE_fx" >|  n (select 1 [(parseBP_E ("{"++(unwords (map show [0..4]))++"}%16")), (segment 8 (irand 26))])) |+| n 0 # cut 1 # room 0.6

(playPat 4)-- # krush 3 # room 0.3

d1 $ playPat 4 |+| n 0 # cut 1 # room 0.6 -- # krush 3 # room 0.3
d1 $ playPat 4 # cut 1

d2 $ s "808bd:1 808bd:1 sd ~" # krush 10 # speed (range "<2 1.5 1 1>" 1 saw) # up "<22@2 9 -3>" # room 0.5


d3 silence





d2 $ s "808bd:1 808bd:1 sd ~" # krush 10 # speed (range "<2 1.5 1 1>" 1 saw) # up "<22@2 9 -3>" # room 0.5

d2 silence

hush










hush

p "vocals0" silence

p "vocals0" $ loopAt 2 $ chop 32 $ s "IGLOOGHOST_vocals:18" # delayIn # gain (cF 0.5 "moverX") # orbit 0

vocals 0 0 0 -- hush volume0 volume1
iglooBeat 0 0 1 1 -- hush beat0 beat1 beat2
drums 0 1 1 -- hush lowOctave highOctave
bigBeat 0 1 2 0.185 -- hush gain slow degrade ***ONLY ONE SOUND***
glitch 0 1 1 1 -- hush glitch0 glitch1 glitch2
sophie 0 0 0 0.8 -- hush vol0 vol1 vol2
chordProg 0 0 0 -- hush prog-0-1-2 restart
climax 1 0 1 0 0 -- hush vol0 vol1 vol2 restart

do {
  vocals 0 (cF 0 "vocal0") (cF 0 "vocal1"); -- hush volume0 volume1
  iglooBeat 0 (cF 0 "igloo0") (cF 0 "igloo1") (cF 0 "igloo2");  -- hush beat0 beat1 beat2
  drums 0 (cF 0 "drums0") (cF 0 "drums1"); -- hush lowOctave highOctave
  bigBeat 0 (cF 0 "bigBeat") 2 0.15; -- hush gain slow degrade ***ONLY ONE SOUND***
  glitch 0 (cF 0 "glitch0") (cF 0 "glitch1") (cF 0 "glitch2"); -- hush glitch0 glitch1 glitch2
  sophie 0 (cF 0 "sophie0") (cF 0 "sophie1") (cF 0 "sophie2"); -- hush vol0 vol1 vol2
  chordProg (cF 0 "chords0") (cF 0 "chords1") (cF 0 "chords2");  -- hush prog-0-1-2
  climax 0 (cF 0 "climax0") (cF 0 "climax1") (cF 0 "climax2") 0; -- hush vol0 vol1 vol2 restart
  thisLove (cF 0 "thisLove");
  gormaduli
}

do
  chordProg 0 0 0 -- hush prog-0-1-2 restart
  climax 1 1 1 1 0   -- hush vol0 vol1 vol2 restart

xfade "melody" silence

hush

water

water1 = loopAt 4 $ chop 32 $ s "44comp:39" # room 0.7 # cloudsDelayIn # pan perlin -- # gain perlin
water2 = loopAt 8 $ chop 32 $ s "44comp:39" # room 0.7 # pan perlin -- # gain perlin
water3 = loopAt 16 $ chop 32 $ s "44comp:39" # room 0.7 # gain 1.1 # cloudsGrain -- # gain (perlin2With (cosine*2) (sine*2))
water4 = chop 32 $ loopAt 4 $ sound "44comp:39" # gain 1.2 # room 0.9
water = do
  p "water1" $ water3
  p "water2" $ water2
  p "water3" $ water3

d3 $ qtrigger 3 $ seqP [
  (0, 1, s "hh*16"),
  (1,5,loopAt 4 $ chop 32 $ s "IGLOOGHOST_drum_loops:7" # gain (1.2) # orbit 1),
  (5,6, s "hh*16")
] # room 0.3

p "igloo2" --10



cow1 = loopAt 4 $ chop 32 $ s "44comp:31" # room 0.7 # cloudsDelayIn # pan perlin # gain (1*(cF 0 "gormaduli"))-- # gain perlin
cow2 = loopAt 8 $ chop 32 $ s "44comp:31" # room 0.7 # pan perlin # gain (1*(cF 0 "gormaduli"))-- # gain perlin
cow3 = loopAt 16 $ chop 32 $ s "44comp:31" # room 0.7 # gain (1.1*(cF 0 "gormaduli")) -- # gain (perlin2With (cosine*2) (sine*2))
cow4 = chop 32 $ loopAt 4 $ sound "44comp:31" # gain (1.2*(cF 0 "gormaduli")) # room 0.9
gormaduli = do
  p "cow1" $ cow1
  p "cow2" $ cow2
  p "cow3" $ cow3
thisLove zero = do
  xfadeIn "thisLove0" 8 $ jux (rev) $ slow 8 $ striate' 64 (1/4) $ sound "44comp:36" # room "0.9" # size "0.9" # speed "1" # slow 4 ( gain (zero) ) # up "-4" -- # up "5"-- # slow 4 ( crush (range 2 32 rand) )
  xfadeIn "thisLove1" 8 $ jux (rev) $ slow 8 $ striate' 64 (1/4) $ sound "44comp:36"  # room "0.9" # size "0.9" # speed "-2" # slow 4 ( gain ( zero) ) # up "-4" -- # up "5"
  xfadeIn "thisLove2" 8 $ jux (rev) $ slow 8 $ striate' 64 (1/4) $ sound "44comp:36"  # room "0.9" # size "0.9" # speed "0.5" # slow 4 ( gain (zero)) # up "-4" -- # up "5"
chordProg gain0 gain1 gain2 =
  do
    p "chords0" $ loopAt 32 $ chop 32 $ s "44comp:32" # gain (1*gain0) # room 0.5  # orbit 6 -- # nudge "-0.027"
    p "chords1" $ loopAt 16 $ chop 32 $ s "44comp:33" # gain (1*gain1) # room 0.5  # orbit 6 -- # krush 1
    p "chords2" $ loopAt 8 $ chop 32 $ s "44comp:34" # gain (1*gain2) # room 0.5  # orbit 6
-- all this has been added to BootTidal.hs
vocals stopAll mainVocal glitchVocal =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    p "vocals0" $ loopAt 2 $ chop 32 $ s "IGLOOGHOST_vocals:18" # delayIn # gain mainVocal # orbit 0
    p "vocals1" $ loopAt 4 $ chop 32 $ s "IGLOOGHOST_vocals:17" # delayIn # gain glitchVocal # orbit 0 --17 is 5 16 is 1
iglooBeat stopAll vol0 vol1 vol2 =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    p "igloo0" $ loopAt 4 $ chop 32 $ s "IGLOOGHOST_drum_loops:0" # gain (1.2*vol0) # orbit 1-- 5
    p "igloo1" $ loopAt 8 $ chop 64 $ s "IGLOOGHOST_drum_loops:1" # gain (1.2*vol1) # orbit 1-- 8
    p "igloo2" $ loopAt 4 $ chop 32 $ s "IGLOOGHOST_drum_loops:7" # gain (1.2*vol2) # orbit 1--10
drums stopAll zero one =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    p "drums0" $ loopAt 4 $ chop 32 $ s "33:28" # gain zero # delayIn # pan 0 # orbit 2
    p "drums1" $ loopAt 2 $ chop 32 $ s "33:28" # gain one # delayIn # pan 1 # orbit 2 -- 10
bigBeat stopAll gainAmount slowAmount degradeAmount =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    d6 $ rotL 1 $ slow slowAmount $ every 4 (# speed 0.5) $ someCyclesBy degradeAmount (degrade)$ s "[[monomachine:0!2] [~ monomachine:0@3] [monomachine:0] ~]" # gain gainAmount # speed (range 1 0.125 (saw)) # krush 10 # room 0.7 # orbit 3
glitch stopAll zero one two =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    p "glitch0" $ s "[glitch:4 ~ ~ ~ glitch:4? ~ ~]*<8 4 16>" # gain ((range 1 1.2 (rand))*zero) # room 0.2 # orbit 4-- 8
    p "glitch1" $ s "~ [~ [click:3] ~ ~ ~ ~ ~] ~ [~ ~ ~ click:3  ~ ~ ~]" # room 0.2 # gain (1.3*one) # nudge 0.027 # orbit 4-- 7
    p "glitch2" $ density 0.5 $ s "~ glitch:2 ~ glitch:2?" # room 0.9 # gain (1.3*two) # speed 2 # orbit 4--10
    -- if zero == 1
    --   then do
    --     else return ()
    -- if one == 1
    --   then do
    --     else return ()
    -- if two == 1
    --   then do
    --     else return ()
sophie stopAll beat0 beat1 beat2 =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    p "sophie0" $ slow 2 $ s "SOPHIE_fx_kicks(3,8)" # n "2" # gain (1.2*beat0) # room 0.4 # orbit 5
    p "sophie1" $ s "[~ SOPHIE_percussion]" # n 5 # gain (beat1) # nudge "-0.02" # orbit 5
    p "sophie2" $ every 4 (slow 2) $ s "[SOPHIE_hihats!4] [[SOPHIE_hihats*4] SOPHIE_hihats!2] [SOPHIE_hihats!2 [SOPHIE_hihats*4?]] [SOPHIE_hihats!4]" # n "<1 1 1 0>" # gain ((range 0.8 1 rand)*beat2) # orbit 5
chordprog zero one two restart =
  do
    -- if stopAll == 1
    --   then do
    --     hush
    -- else return ()
    -- p "chords" $ loopAt 32 $ chop 32 $ s "44comp:32" # gain gain0 # room 0.5  # orbit 6 -- # nudge "-0.027"
    -- p "chords" $ loopAt 16 $ chop 32 $ s "44comp:33" # gain gain1 # room 0.5  # orbit 6 -- # krush 1
    -- p "chords" $ loopAt 8 $ chop 32 $ s "44comp:34" # gain gain2 # room 0.5  # orbit 6
    if zero == "1"
      then do
        if (restart==1)
          then do
            p "chords" $ qtrigger "chords" $ loopAt 32 $ chop 32 $ s "44comp:32" # gain 1 # room 0.5  # orbit 6 -- # nudge "-0.027"
        else do
          p "chords" $ loopAt 32 $ chop 32 $ s "44comp:32" # gain 1 # room 0.5  # orbit 6 -- # nudge "-0.027"
    else if one == "1"
      then do
        if (restart==1)
          then do
            p "chords" $ qtrigger "chords" $ loopAt 16 $ chop 32 $ s "44comp:33" # gain 1 # room 0.5  # orbit 6 # krush 1
        else do
          p "chords" $ loopAt 16 $ chop 32 $ s "44comp:33" # gain 1 # room 0.5  # orbit 6 # krush 1
    else if two == "1"
      then do
        if (restart==1)
          then do
            p "chords" $ qtrigger "chords" $ loopAt 8 $ chop 32 $ s "44comp:34" # gain 1 # room 0.5  # orbit 6
        else do
          p "chords" $ loopAt 8 $ chop 32 $ s "44comp:34" # gain 1 # room 0.5  # orbit 6
    else return ()
climax stopAll zero one two restart =
  do
    if stopAll == 1
      then do
        hush
    else return ()
    if (restart==1)
      then do
        p "windarp" $ qtrigger "windarp" $ loopAt 8 $ chop 32 $ s "44comp:21" # gain (1.2*zero) # room 0.5 # pan 0 # orbit 7
    else do
      p "windarp" $ loopAt 8 $ chop 32 $ s "44comp:21" # gain (1.2*zero) # room 0.5 # pan 0 # orbit 7
    if (restart==1)
      then do
        p "dpoarp" $ qtrigger "dpoarp" $ loopAt 8 $ chop 32 $ s "44comp:6" # gain (0.9*one) # room 0.5 # pan 1 # orbit 7
    else do
      p "dpoarp" $ loopAt 8 $ chop 32 $ s "44comp:6" # gain (0.9*one) # room 0.5 # pan 1 # orbit 7
    if (restart==1)
      then do
        p "melody" $ qtrigger "melody" $ loopAt 32 $ chop 32 $ s "44comp:24" # gain (1.3*two) # room 0.5 # orbit 7
    else do
      p "melody" $ loopAt 32 $ chop 32 $ s "44comp:24" # gain (1.3*two) # room 0.5 # orbit 7
